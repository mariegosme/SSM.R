############### CHANGELOG AND QUESTIONS #################

## Started updating "allvariables.xlsx". Setting the frame for the soil nitrogen submodel implementation
## All additions/changes are in red font (NOT red highlighting!)
## Additionnally, existing values that got modified are in bold italic

------------------ Jun 16 2021 ------------------

- Added / modified variables related to the upcoming addition of the Soil Nitrogen module
  Name for corresponding R module in the excel is "rUpdateSoilNitrogen"

- Changed some soil-specific variable types in allvariables.xslx for variables that are dependent on soil layer.
  A lot were single "numeric" data while we would actually need either a data.frame or 10 different variables, one
  for each possible soil layer (i.e pSoilOrganicN.1, pSoilOrganicN.2 ... pSoilOrganicN.10 )

- Presently, some layer-dependent variables are represented as 10 different ones, while some are composed of a single
  data.frame (supposedly 1-dimensional). What would the convention be if we were to decide what variable should
  be represented as a data.frame and which should be split into 10 numeric variables ?
  For now, I decided to implement state variables (subject to vary during the simulation) as different numeric variables and
  soil parameters (that will remain constant throughout) as data frames

- Specifically, pSoilCurveNumber, parameter allowing calculation of the drainage factor, would be considered layer-specific,
  changed its type from "numeric" to "data.frame"

- iniWL, U, and DRAINF new names were changed so they fit the naming convention (cf. "Translation of SSM into R.pdf")

- VPDF type is "SoilParameter"
  The excel model did not consider it a soil parameter but it was instead in the "Location" tab
  So it would seem it's rather a parameter of Latitude / Longitude
  Description explains it's a parameter depending on climate, that varies from 0.65 for humid/sub-humid climates to 0.75 for arid ones
  Thus, changed its type from "SoilParameter" to "LocationParameter" although none other variables are of this type
  Might fit into a better type.

- There is an ambiguity for certain variables that represent INITIAL values. Should they be considered as inputs or parameters ?
  For instance, initial amount of soluble N in L layer...

  UPDATE : Initial values, of N for instance, are considered inputs for now

  There also is some ambiguity for variables that represent the sum of each layer's value
  For example total amount of soluble N in soil being the sum of each layer's amount
  Should the be considered as computed variables or state variables ?
  Probably needs to have it figured out for each single variable specifically.

  UPDATE : Variables that are summed from each layer each timestep are considered computed for now

- U, renamed to "pU", is a parameter for calculating evaporation, shouldn't it be specific to each layer ? Or are
  we assuming that evaporation only happens in the very top layer, no matter how thin it could be ?

- In the excel, organic N amount and organic N percentage were considered "parameters". Changed their types to state variables
  as we will be interested in tracking their values, and their changes, especially when implementing the break down of legume crops
  as a way to recycle their fixated N into organic N for the soil


------------------ Jun 17 2021 ------------------

- ADDED sNMineralization.L for NMIN, sTotalNMineralization for SNMIN, sCumulatedNMineralization for CNMIN
  The second being the sum of each layer's net mineralization, would it be computed or state variable
  Cumulated being the sum of every daily NMIN, computed ? or state variable ?

  UPDATE :Variables being the sum of each layer are set to 0 at the beginning of each timestep -> COMPUTED
          Cumulated variables keep their values from one timestep to the next -> STATE VARIABLE

- ADDED soil temperature as "sSoilTemp". Should it be considered a computed variable or a state variable?
  It is computed from air temperature as parameter, but it does represent a state of the system

  UPDATE: For now, decided to consider it computed, since it's computed at the beginning of each timestep

- For soil variables that are computed from the sum of each layer at each timestep, ambiguity between computed
  or state variable solved from "Translation of SSM into R.pdf"
  Since they are set to 0 at the beginning of each timestep (at least in VBA model), we can consider them computed and not state variables

- Variable named "WFNDNIT" is ambiguous. It seems unused in the original VBA model since it's commented out the code.
  Should we account for it in the R model ? I cannot find it in the SSM documentation pdf although it probably is a 
  "Water Factor for Nitrogen Denitrification".
  I also know there's a factor to account for in denitrification being how long through the day will there be enough water
  for denitrification ? For example you'd have NDNIT multiplied by 0.25 if you assumed there would be enough water during 6 hours.
  WFNDNIT might represent this particular factor, although I am still unsure. For now, the corresponding line in the excel is
  left blank and highlighted in yellow.

- Finished adding the soil nitrogen variables into the Excel. There remains some ambiguities so it might be reworked a little.


------------------ Jun 18 2021 ------------------

- In allvariables.xlsx, changed variables that had R module "rWaterBudget" to "rUpdateWaterBudget"
  as "rWaterBudget" doesn't exist in the R code

- Same goes for variables with module "rRootDepth", changed to "rUpdateRootDepth"

- Noticed initial water content module is "rCreateDay0"
  Should all initial values / soil content be in this module ?

- QUESTION: How is the date going to be represented ? There is an "iDate" variable in the excel
  of R type "Date"
  Could be relevant to represent dates as number of days after sowing (sowing being day 0) as
  it is done by default in the model (although it's possible to do otherwise)
  Also, why is this variable considered an input ?
  I added a state variable sPresentDate (in number of days after sowing) with module being "global"

- PROBLEM: A lot of variables in the R code don't have a prefix for their type in the model (Note: might only include functions local variables)
  Also, there is a number of variables which names are still acronyms as they are in the SSM documentation
  Objective of the R translation being to get rid of those ambiguous names

- PROBLEM: In the VBA model, there are two variables representing the same thing:
  TMPCR for Crown temperature and TMPS for soil temperature, set equal to the air temperature
  In the nitrogen submodel, TMPS is used as TMPS = TMP
  It doesn't account for snow covers and such
  Why not use TMPCR, which does account for snow, instead ?
  Computation of TMPCR is already coded

- ADDED fComputeKNforMineralization and fComputeRNforMineralizaion in the R code,
  for RN and KN factor computation (modeling soil temperature
  and soil moisture effects on the process of mineralization)
  Also added roxygen documentation and comments

- ADDED fComputeNMineralization that returns the amount of N mineralization for a specific layer
  being given its amount of mineralizableN (MNORG), soluble N concentration (NCON), and computed KN and RN
  Also added roxygen documentation

- ADDED fComputeNDrainage that returns the amount of N drained out a specific layer into the one below
  being given the layer soluble N amount (NSOL), water drainage (FLOUT), water content (WL), and soluble N
  concentration (NCON) and minimum concentration for N drainage (defaulted to 0.000001 mg.L-1)
  Also added roxygen documentation

- ADDED fComputeXNCONforDenit which simply returns max(solubleNConcentration, threshold)
  That threshold being a concentration value over which further increase has little to no effect
  on the denitrification process. It is defaulted to 0.0004 mg.L-1 as it is in the SSM documentation.
  Also added roxygen documentation

- ADDED fComputeKDNIT which computes the rate factor KDNIT for denitrification,
  which models the effect of soil temperature on the process of denitrification
  Also added roxygen documentation

- ADDED fComputeNDenitrification which computes the amount of N denitrification in the layer corresponding
  to the layer-specific given inputs: fraction of transpirable water (FTSW), effective N concentration (XNCON),
  water content (WL), and KDNIT.
  Function also includes the parameter "waterFactor" representing the WFDNIT variable of the original VBA model
  although I'm still unsure what it represented. I assume it's the fraction of the day where there's sufficient
  water for denitrification. Since this issue is seemingly not accounted for in the VBA model, the parameter is
  defaulted to 1.
  Also added comments and roxygen documentation

## PROBLEM
  	- VBA model code that has been commented out a calculation of this WFDNIT variable. It could easily be included
  as a function to compute it in the R code too. We have to figure out why it was commented out in the first place.
  There is another source of ambiguity for this function.
  	- In the original model, it's assumed denitrification only happens in the uppermost 2 layers of the soil and layers
  underneath have their NDNIT set to 0, regardless of how thin they possibly can be.
  This is kind of arbitrary. It is also assumed that denitrification only occurs at soil depths shorter than
  250 mm. We could use this quantitative condition in the larger soil nitrogen procedure: have a maximum depth
  below which denitrification does not occur at all. This parameter could be defaulted to 250 mm.

- ADDED fComputeRemovalByUptake which computes the amount of N loss in a layer via plant uptake/absorption based on
  the layer's N that's acessible to the plant (NAVL), the whole soil's accessible N ressources (SNAVL), the 
  crop's demand in N uptake (NUP) and crop's nitrogen fixation (BNF) (= 0 in any case but a legume crop)
  Also added roxygen documentation


## TODO:
        - CODE the rUpdateSoilNitrogen procedure
	- ADD examples to documentations once the whole module is completed and running (once I know exactly how I will
   use the small functions)
        - ADD units and corresponding original variable name to every function parameter (in the documentation)
        - ADD other functions 


------------------ Jun 21 2021 ------------------

- ADDED fComputeSolubleN that returns the amount of soluble N in a given layer (in g (of N) .m-2 ) from the ppm concentrations
  of NO3 and NH4 in this layer
  Also added roxygen documentation

- ADDED fComputeSoilMass that returns a given layer's soil mass (SOILML, in g.m-2) from the layer's fraction of
  coarse particles (FG), its bulk density (BDL, g.cm-3) and its thickness/depth (DLYER, mm)
  Also added roxygen documentation

- ADDED fComputeMineralizableN that returns the amount of mineralizable organic N (MNORG, g.m-2) in a given layer
  from its percentage of N that's organic (NORGP), the layer's soil mass (SOILML, g.m-2) and the mineralizable fraction of
  the organic N (FMIN).
  Also added roxygen documentation

- ADDED skeleton for rUpdateSoilNitrogen procedure. Could likely change.

## PROBLEM: Need to figure out:
	- How exactly do I extract inputs and parameters values from the input sheets ?
	- How exactly do I get state variables from previous timestep ?
	- How exactly do I get and modify these global variables
	- How do I access / write in ALLDAYDATA ? I need to know what the data frame looks like.
		^ I can try and run from the website and get the output sheets to have a look at the structure

## PROBLEM: R model on D4Declic webpage doesn't seem to work, as I always get the same results no matter the crops I choose,
or the number of days I run, the weather data and starting year I choose (took screenshots if needed)



------------------ Jun 22 2021 ------------------

# There is still amibiguity between inputs and parameters ? What would be which ?

- I now consider inputs to be daily, changing values, such as precipitation, radiation, temperature, etc... Most of them being weather. Consequently,
  I changed some variable types from input to parameter, of which :
    * iInitialWater -> pInitialWater
    * iInitialNO3Concentration -> pInitialNO3Concentration
    * iInitialNH4Concentration -> pInitialNH4Concentration
    * iNumberOfApplications -> pNumberOfApplications

# icicicic
## PROBLEM: Do we need to extract soil parameters (such as bulk density, coarse soil fraction, layer thickness...)
	    on every timestep, despite the fact that it's assumed not to change over time ??
	    Quite tedious having to extract them each day, is it not ?
            Question is: are their values being reset to default values at the start of every timestep ? 
            or do they keep their previous values ? 
            Anyway, it would seem more efficient to just have them loaded at simulation start, and keep them
            in a "drawer" for quick use throughout simulation.

## Apparently, soil parameters are loaded into ALLSOILS from allvariables.xlsx sheet "other", as I thought
and type in the model must be "SoilParameter" for it to be loaded into ALLSOILS
	- VPD type in the model changed back to SoilParameter
	- Moved computed and state variables that were in this sheet to savedEachDay
          Those consisted of soil nitrogen variables
	- Changed sheet name from "other" to "soilParameters" since it now only contains soil parameters
	- Changed R code to import from sheet called "soilParameters" and not "other" anymore


------------------ Jun 22 2021 ------------------

## How are soil datas being extracted from soils.xlsx ? I assume we use fExtractSoilParameter with paramname
equal to the new name in allvariables.xlsx and that it fetches corresponding parameter in soils.xlsx based on
the "translationSSM" name in allvariables.xlsx.
Thus I changed pInitialOrgNPercentage translation "INORGP" to "NORG" as it is named in soils.xlsx

## TO-DO : Update variable names in eReadSoil to their new updated names (allvariables.xlsx)

## PROBLEM icici: is daily temp not a global variable ? it should be computed at the very beginning of a timestep,
in rWeatherDay() for example, for easy use in the other modules
Apparently, cTemp: daily mean temperature is computed in rUpdatePhenology ?

## QUESTION: Some values are worth considering if they should be saved in ALLDAYDATA or not
Such values as computed factors and coefficients for calculating amount of denitrification, mineralization
Those values are only computed in order to compute an estimation of an ACTUAL meaningful process
Those values are not really relevant by themselves.
In the R code, I have not been saving these values in ALLDAYDATA for now.
Should I ? If not, should we remove those from "allvariables.xlsx" ?

- Almost COMPLETED rSoilNitrogen. Remains the part for N fertilization.
  Also remains to figure how initial values for the soils are set, whether it's in createDay0() or not...
  Some things remain to discuss and change. It's only a first version.

- ADDED fComputeNConcentration() that computes soluble N concentration in a specific layer
	from given solubleNAmount and waterContent
# TO-DO still need to add the documentation for this function, as simple as it is

- ADDED rUpdateSoilNitrogen() at the end of mOneTimeStep function in handlersSSM.R


