library(openxlsx)
setup<-function(modelfolder) #moldelfolder is the folder containing files SSM.R and allvariables.xlsx
{
#setup= fonction qui cree un objet "modele", contenant ses fonctions de manipulation, a partir du chemin du dossier qui contient le code du modele et le fichier excel des variables
ICI<-environment()
setwd(modelfolder) #folder where the "model data" (e.g. list of variables and function definition files) are
source("headersSSM.R", local=TRUE)
source("initialisationEnvironmenVariablesSSM.R", local=TRUE)
source("externalFilesReadingSSM.R", local=TRUE)
source("HousekeepingFunctionsSSM.R", local=TRUE)
source("functionsSSM.R", local=TRUE)
source("handlersSSM.R", local=TRUE)
return(list(contains=mContains, # fonction qui liste les objets prÃ©sents dans le modÃ¨le (contains) et les extrait (getglobal),
#doinside=evalICI,
#getparam=getparam, #fonction qui renvoie les paramÃ¨tres du modÃ¨le pour vÃ©rification (getparam), et qui les modifie (setparam),
#setparam=print("reverifier setparam, en particulier ce qui doit etre recalcule une fois au debut de la simu"), #setparam,
GetAllForDebuggingPurposes=mGetAllForDebuggingPurposes,
setoptions=mCompletePARAMSIM,
getglobal=mGetGlobal,
setglobal=mSetGlobal,
extractVariable=mExtractVariable,
#setoptions=setoptions, #fonction qui rÃ¨gle les options d'affichage et de mÃ©morisation (setoptions),
#restart=print("reverifier restart, en particulier ce qui doit etre recalcule une fois au debut de la simu"), #restart, #fonction qui remet le modele Ã  0 (restart),
run=mRun,  #fonction qui lance la simu pour n pas de temps (run),
#map=cartesorties,
plot=mPlotDynamics,#fonction qui plote la dynamique d'une ou plusieurs variables enregistrÃ©Ã©es (plot)
summary=mSummary, #fonction qui rÃ©sume l Ã©tat du modÃ¨le: nombre de pas de temps et gamme de dates,
ExportDataFrame=mExportDataFrame
))
}
# prepare cases (these will be the rows of ALLSIMULATEDDATA:
#mycases<-data.frame(climatename="Ain Hamra - Meknes", soilname="325_-35", lat=c(35, 35, 45), long=-5)
#climatename: one of the sheet names of file climates (if climate in standard SSM format)
#soilname: one of the sheet names of file soils (if in standard SSM format)
#to do: define crop rotation and management (once management procedure is completed)
#rownames(mycases)<-c("Meknes35degresWheat", "Meknes35degresMaize", "Meknes35degresChickpea") #these will be the cases names used in the plots, outputs etc...
#OR read from excel file
mycases<-read.xlsx(normalizePath("input/SimulationOptions.xlsx"), sheet="cases")
setwd("~/a_ABSys/D4Declic/platform/SSM")
# prepare cases (these will be the rows of ALLSIMULATEDDATA:
#mycases<-data.frame(climatename="Ain Hamra - Meknes", soilname="325_-35", lat=c(35, 35, 45), long=-5)
#climatename: one of the sheet names of file climates (if climate in standard SSM format)
#soilname: one of the sheet names of file soils (if in standard SSM format)
#to do: define crop rotation and management (once management procedure is completed)
#rownames(mycases)<-c("Meknes35degresWheat", "Meknes35degresMaize", "Meknes35degresChickpea") #these will be the cases names used in the plots, outputs etc...
#OR read from excel file
mycases<-read.xlsx(normalizePath("input/SimulationOptions.xlsx"), sheet="cases")
rownames(mycases)<-mycases$name
mycases$rotation<-sapply(mycases$rotation, function(x) eval(parse(text=paste("c(", x, ")"))), USE.NAMES = FALSE)
mycases$management<-sapply(mycases$management, function(x) eval(parse(text=paste("c(", x, ")"))), USE.NAMES = FALSE)
paramsim<-list(
simustart=as.Date("1997-11-01"), #date of start of the simulation
cases=mycases, #cases (e.g. spatial locations, soils, latitudes etc... = rows in ALLSIMULATEDDATA)
#directory="/Users/user/Documents/a_System/modelisation/SSM/simulations/premieressai", #directory where your input (with climates and soils files) and output folders are
#directory="/Users/user/Documents/b_maison/congeMat/D4DECLIC/runSSM",#directory where your input (with climates and soils files) and output folders are
directory="/Users/user/Documents/b_maison/congeMat/D4DECLIC/SSM",
climateformat="standardSSM",
cropformat="standardSSM",
soilformat="standardSSM",
managformat="standardSSM",
Neffect=FALSE
)
paramsim<-list(
simustart=as.Date("1997-11-01"), #date of start of the simulation
cases=mycases, #cases (e.g. spatial locations, soils, latitudes etc... = rows in ALLSIMULATEDDATA)
#directory="/Users/user/Documents/a_System/modelisation/SSM/simulations/premieressai", #directory where your input (with climates and soils files) and output folders are
#directory="/Users/user/Documents/b_maison/congeMat/D4DECLIC/runSSM",#directory where your input (with climates and soils files) and output folders are
directory="~/a_ABSys/D4Declic/platform/SSM",
climateformat="standardSSM",
cropformat="standardSSM",
soilformat="standardSSM",
managformat="standardSSM",
Neffect=FALSE
)
#build the model
#mymodel<-setup("/Users/user/Documents/a_System/modelisation/SSM/traductionSSM_R/")
#mymodel<-setup("/Users/user/Documents/b_maison/congeMat/D4DECLIC/SSM/")
mymodel<-setup("~/a_ABSys/D4Declic/platform/SSM/")
#set the simulation options
mymodel$setoptions(paramsim)
mymodel$run(0) #just to initialise the model
mymodel$GetAllForDebuggingPurposes()
